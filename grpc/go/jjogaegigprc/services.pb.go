// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services.proto

package jjogaegigprc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RunConfig struct {
	Parser               string            `protobuf:"bytes,1,opt,name=parser,proto3" json:"parser,omitempty"`
	Formatter            string            `protobuf:"bytes,2,opt,name=formatter,proto3" json:"formatter,omitempty"`
	Options              map[string]string `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RunConfig) Reset()         { *m = RunConfig{} }
func (m *RunConfig) String() string { return proto.CompactTextString(m) }
func (*RunConfig) ProtoMessage()    {}
func (*RunConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{0}
}

func (m *RunConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunConfig.Unmarshal(m, b)
}
func (m *RunConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunConfig.Marshal(b, m, deterministic)
}
func (m *RunConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunConfig.Merge(m, src)
}
func (m *RunConfig) XXX_Size() int {
	return xxx_messageInfo_RunConfig.Size(m)
}
func (m *RunConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RunConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RunConfig proto.InternalMessageInfo

func (m *RunConfig) GetParser() string {
	if m != nil {
		return m.Parser
	}
	return ""
}

func (m *RunConfig) GetFormatter() string {
	if m != nil {
		return m.Formatter
	}
	return ""
}

func (m *RunConfig) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type RunRequest struct {
	Config               *RunConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Input                []byte     `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RunRequest) Reset()         { *m = RunRequest{} }
func (m *RunRequest) String() string { return proto.CompactTextString(m) }
func (*RunRequest) ProtoMessage()    {}
func (*RunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{1}
}

func (m *RunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunRequest.Unmarshal(m, b)
}
func (m *RunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunRequest.Marshal(b, m, deterministic)
}
func (m *RunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunRequest.Merge(m, src)
}
func (m *RunRequest) XXX_Size() int {
	return xxx_messageInfo_RunRequest.Size(m)
}
func (m *RunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunRequest proto.InternalMessageInfo

func (m *RunRequest) GetConfig() *RunConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *RunRequest) GetInput() []byte {
	if m != nil {
		return m.Input
	}
	return nil
}

type RunResponse struct {
	Output               []byte   `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunResponse) Reset()         { *m = RunResponse{} }
func (m *RunResponse) String() string { return proto.CompactTextString(m) }
func (*RunResponse) ProtoMessage()    {}
func (*RunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{2}
}

func (m *RunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunResponse.Unmarshal(m, b)
}
func (m *RunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunResponse.Marshal(b, m, deterministic)
}
func (m *RunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunResponse.Merge(m, src)
}
func (m *RunResponse) XXX_Size() int {
	return xxx_messageInfo_RunResponse.Size(m)
}
func (m *RunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunResponse proto.InternalMessageInfo

func (m *RunResponse) GetOutput() []byte {
	if m != nil {
		return m.Output
	}
	return nil
}

func init() {
	proto.RegisterType((*RunConfig)(nil), "jjogaegi.RunConfig")
	proto.RegisterMapType((map[string]string)(nil), "jjogaegi.RunConfig.OptionsEntry")
	proto.RegisterType((*RunRequest)(nil), "jjogaegi.RunRequest")
	proto.RegisterType((*RunResponse)(nil), "jjogaegi.RunResponse")
}

func init() { proto.RegisterFile("services.proto", fileDescriptor_8e16ccb8c5307b32) }

var fileDescriptor_8e16ccb8c5307b32 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xdd, 0x06, 0xab, 0x9d, 0x84, 0x22, 0x6b, 0x95, 0x50, 0x3c, 0x84, 0x80, 0x10, 0x10,
	0x82, 0x44, 0x0f, 0x92, 0x83, 0x07, 0xc5, 0x73, 0x61, 0x7b, 0xf3, 0x16, 0xc3, 0x34, 0xa4, 0xda,
	0xdd, 0x75, 0xff, 0x14, 0x7a, 0xf5, 0x5b, 0xf9, 0xed, 0x24, 0x9b, 0x8d, 0xff, 0xf0, 0xe2, 0x6d,
	0xdf, 0xcc, 0x9b, 0xdf, 0x1b, 0x66, 0x61, 0xaa, 0x51, 0x6d, 0xdb, 0x1a, 0x75, 0x2e, 0x95, 0x30,
	0x82, 0x1e, 0xae, 0xd7, 0xa2, 0xa9, 0xb0, 0x69, 0xd3, 0x77, 0x02, 0x13, 0x66, 0xf9, 0xbd, 0xe0,
	0xab, 0xb6, 0xa1, 0xa7, 0x30, 0x96, 0x95, 0xd2, 0xa8, 0x62, 0x92, 0x90, 0x6c, 0xc2, 0xbc, 0xa2,
	0x67, 0x30, 0x59, 0x09, 0xb5, 0xa9, 0x8c, 0x41, 0x15, 0x8f, 0x5c, 0xeb, 0xab, 0x40, 0x4b, 0x38,
	0x10, 0xd2, 0xb4, 0x82, 0xeb, 0x38, 0x48, 0x82, 0x2c, 0x2c, 0x92, 0x7c, 0xe0, 0xe7, 0x9f, 0xec,
	0x7c, 0xd1, 0x5b, 0x1e, 0xb8, 0x51, 0x3b, 0x36, 0x0c, 0xcc, 0x4b, 0x88, 0xbe, 0x37, 0xe8, 0x11,
	0x04, 0xcf, 0xb8, 0xf3, 0xf1, 0xdd, 0x93, 0xce, 0x60, 0x7f, 0x5b, 0xbd, 0x58, 0xf4, 0xb9, 0xbd,
	0x28, 0x47, 0x37, 0x24, 0x5d, 0x00, 0x30, 0xcb, 0x19, 0xbe, 0x5a, 0xd4, 0x86, 0x5e, 0xc0, 0xb8,
	0x76, 0x49, 0x6e, 0x38, 0x2c, 0x8e, 0xff, 0x58, 0x82, 0x79, 0x4b, 0x07, 0x6d, 0xb9, 0xb4, 0xc6,
	0x41, 0x23, 0xd6, 0x8b, 0xf4, 0x1c, 0x42, 0x07, 0xd4, 0x52, 0x70, 0x8d, 0xdd, 0x35, 0x84, 0x35,
	0x9d, 0x8b, 0x38, 0x97, 0x57, 0xc5, 0x1b, 0x71, 0xc1, 0xcb, 0xfe, 0xa6, 0xf4, 0x1a, 0x02, 0x66,
	0x39, 0x9d, 0xfd, 0xc8, 0xf3, 0x5b, 0xcd, 0x4f, 0x7e, 0x55, 0x7b, 0x74, 0xba, 0x47, 0x6f, 0xdd,
	0xdd, 0x97, 0x46, 0x61, 0xb5, 0xf9, 0xe7, 0x6c, 0x46, 0x2e, 0xc9, 0xdd, 0xf4, 0x31, 0x1a, 0xba,
	0x8d, 0x54, 0xf5, 0xd3, 0xd8, 0xfd, 0xec, 0xd5, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5e, 0xac,
	0xba, 0xe5, 0xeb, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RunServiceClient is the client API for RunService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RunServiceClient interface {
	// Runs a single input
	Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error)
	// Runs a stream of inputs. Only the first config is considered; thereafter, only the input accepted.
	RunStream(ctx context.Context, opts ...grpc.CallOption) (RunService_RunStreamClient, error)
}

type runServiceClient struct {
	cc *grpc.ClientConn
}

func NewRunServiceClient(cc *grpc.ClientConn) RunServiceClient {
	return &runServiceClient{cc}
}

func (c *runServiceClient) Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error) {
	out := new(RunResponse)
	err := c.cc.Invoke(ctx, "/jjogaegi.RunService/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runServiceClient) RunStream(ctx context.Context, opts ...grpc.CallOption) (RunService_RunStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RunService_serviceDesc.Streams[0], "/jjogaegi.RunService/RunStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &runServiceRunStreamClient{stream}
	return x, nil
}

type RunService_RunStreamClient interface {
	Send(*RunRequest) error
	Recv() (*RunResponse, error)
	grpc.ClientStream
}

type runServiceRunStreamClient struct {
	grpc.ClientStream
}

func (x *runServiceRunStreamClient) Send(m *RunRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *runServiceRunStreamClient) Recv() (*RunResponse, error) {
	m := new(RunResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RunServiceServer is the server API for RunService service.
type RunServiceServer interface {
	// Runs a single input
	Run(context.Context, *RunRequest) (*RunResponse, error)
	// Runs a stream of inputs. Only the first config is considered; thereafter, only the input accepted.
	RunStream(RunService_RunStreamServer) error
}

// UnimplementedRunServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRunServiceServer struct {
}

func (*UnimplementedRunServiceServer) Run(ctx context.Context, req *RunRequest) (*RunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}
func (*UnimplementedRunServiceServer) RunStream(srv RunService_RunStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method RunStream not implemented")
}

func RegisterRunServiceServer(s *grpc.Server, srv RunServiceServer) {
	s.RegisterService(&_RunService_serviceDesc, srv)
}

func _RunService_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunServiceServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jjogaegi.RunService/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunServiceServer).Run(ctx, req.(*RunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RunService_RunStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RunServiceServer).RunStream(&runServiceRunStreamServer{stream})
}

type RunService_RunStreamServer interface {
	Send(*RunResponse) error
	Recv() (*RunRequest, error)
	grpc.ServerStream
}

type runServiceRunStreamServer struct {
	grpc.ServerStream
}

func (x *runServiceRunStreamServer) Send(m *RunResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *runServiceRunStreamServer) Recv() (*RunRequest, error) {
	m := new(RunRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _RunService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jjogaegi.RunService",
	HandlerType: (*RunServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Run",
			Handler:    _RunService_Run_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RunStream",
			Handler:       _RunService_RunStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "services.proto",
}
